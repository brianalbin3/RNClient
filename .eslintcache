[{"C:\\Users\\FamilyPC\\client\\src\\index.tsx":"1","C:\\Users\\FamilyPC\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\FamilyPC\\client\\src\\App.tsx":"3","C:\\Users\\FamilyPC\\client\\src\\theme.js":"4","C:\\Users\\FamilyPC\\client\\src\\components\\Main.tsx":"5","C:\\Users\\FamilyPC\\client\\src\\components\\Medicine.tsx":"6","C:\\Users\\FamilyPC\\client\\src\\components\\ContactSettings.tsx":"7","C:\\Users\\FamilyPC\\client\\src\\components\\Alarms.tsx":"8","C:\\Users\\FamilyPC\\client\\src\\components\\Schedule.tsx":"9","C:\\Users\\FamilyPC\\client\\src\\components\\AccountSettings.tsx":"10","C:\\Users\\FamilyPC\\client\\src\\components\\Header.tsx":"11","C:\\Users\\FamilyPC\\client\\src\\components\\Splash.tsx":"12","C:\\Users\\FamilyPC\\client\\src\\components\\Login.tsx":"13","C:\\Users\\FamilyPC\\client\\src\\components\\Register.tsx":"14","C:\\Users\\FamilyPC\\client\\src\\components\\PasswordInput.tsx":"15","C:\\Users\\FamilyPC\\client\\src\\api\\auth.tsx":"16"},{"size":390,"mtime":1607739408575,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1331,"mtime":1608093944267,"results":"20","hashOfConfig":"18"},{"size":388,"mtime":1607739491786,"results":"21","hashOfConfig":"18"},{"size":473,"mtime":1607666723699,"results":"22","hashOfConfig":"18"},{"size":356,"mtime":1607566372875,"results":"23","hashOfConfig":"18"},{"size":403,"mtime":1607566268374,"results":"24","hashOfConfig":"18"},{"size":344,"mtime":1607832473965,"results":"25","hashOfConfig":"18"},{"size":356,"mtime":1607567761346,"results":"26","hashOfConfig":"18"},{"size":406,"mtime":1607568026836,"results":"27","hashOfConfig":"18"},{"size":2810,"mtime":1607737706477,"results":"28","hashOfConfig":"18"},{"size":827,"mtime":1608440931949,"results":"29","hashOfConfig":"18"},{"size":4479,"mtime":1608441727759,"results":"30","hashOfConfig":"18"},{"size":5325,"mtime":1608352044166,"results":"31","hashOfConfig":"18"},{"size":2151,"mtime":1608346501545,"results":"32","hashOfConfig":"18"},{"size":402,"mtime":1608429970505,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"187ra08",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"37"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"37"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"37"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"37"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"C:\\Users\\FamilyPC\\client\\src\\index.tsx",["82"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider, responsiveFontSizes } from '@material-ui/core/styles';\n\nimport theme from './theme';\n\nReactDOM.render(\n  <React.StrictMode>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);",["83","84"],"C:\\Users\\FamilyPC\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\FamilyPC\\client\\src\\App.tsx",["85","86"],"import React from 'react';\nimport { createBrowserHistory } from 'history';\nimport { Route, Router, useHistory, Switch } from 'react-router-dom';\n\nimport ContactSettings from './components/ContactSettings';\nimport Main from './components/Main';\nimport Medicine from './components/Medicine';\nimport Alarms from './components/Alarms';\nimport Schedule from './components/Schedule';\nimport AccountSettings from './components/AccountSettings';\nimport Splash from './components/Splash';\nimport Login from './components/Login';\nimport Register from './components/Register';\n\n\nimport './App.css';\nconst history = createBrowserHistory();\n\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Route exact path=\"/register\" component={Register} />\n      <Route exact path=\"/login\" component={Login} />\n      <Route exact path=\"/\" component={Splash} />\n      <Route path=\"/features\">\n        <Main>\n          <Route path=\"/features/medicine\" component={Medicine} />\n          <Route path=\"/features/contactsettings\" component={ContactSettings} />\n          <Route path=\"/features/alarms\" component={Alarms} />\n          <Route path=\"/features/schedule\" component={Schedule} />\n          <Route path=\"/features/accountsettings\" component={AccountSettings} />\n        </Main>\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\FamilyPC\\client\\src\\theme.js",[],["87","88"],"C:\\Users\\FamilyPC\\client\\src\\components\\Main.tsx",["89","90","91"],"import React, { ReactChildren, ReactChild } from 'react';\r\n\r\n\r\nimport Header from './Header';\r\n\r\ninterface MainProps {\r\n  children: any; /* ReactChild | ReactChildren; */\r\n}\r\n\r\ninterface MainState {}\r\n\r\nclass Main extends React.Component <{}, MainState > {\r\n  constructor(props: MainProps) {\r\n    super(props);\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <main>{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","C:\\Users\\FamilyPC\\client\\src\\components\\Medicine.tsx",["92","93"],"import React, { Component } from 'react';\r\n\r\ntype MedicineState = {\r\n  \r\n}\r\n\r\ntype MedicineProps = {\r\n\r\n}\r\n\r\nclass Medicine extends React.Component<{}, MedicineState> {\r\n    constructor(props: MedicineProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Medicine</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Medicine;","C:\\Users\\FamilyPC\\client\\src\\components\\ContactSettings.tsx",["94","95"],"import React, { Component } from 'react';\r\n\r\ntype ContactSettingsState = {\r\n\r\n}\r\n\r\ntype ContactSettingsProps = {\r\n\r\n}\r\n\r\nclass ContactSettings extends React.Component<{}, ContactSettingsState> {\r\n    constructor(props: ContactSettingsProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>ContactSettings</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactSettings;","C:\\Users\\FamilyPC\\client\\src\\components\\Alarms.tsx",["96","97"],"import React, { Component } from 'react';\r\n\r\ntype AlarmsState = {\r\n  \r\n}\r\n\r\ntype AlarmsProps = {\r\n\r\n}\r\n\r\nclass Alarms extends React.Component<{}, AlarmsState> {\r\n    constructor(props: AlarmsProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <h1>Alarms</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Alarms;","C:\\Users\\FamilyPC\\client\\src\\components\\Schedule.tsx",["98","99"],"import React, { Component } from 'react';\r\n\r\ntype ScheduleState = {\r\n  \r\n}\r\n\r\ntype ScheduleProps = {\r\n\r\n}\r\n\r\nclass Schedule extends React.Component<{}, ScheduleState> {\r\n    constructor(props: ScheduleProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Schedule</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Schedule;","C:\\Users\\FamilyPC\\client\\src\\components\\AccountSettings.tsx",["100","101"],"import React, { Component } from 'react';\r\n\r\ntype AccountSettingsState = {\r\n  \r\n}\r\n\r\ntype AccountSettingsProps = {\r\n\r\n}\r\n\r\nclass AccountSettings extends React.Component<{}, AccountSettingsState> {\r\n    constructor(props: AccountSettingsProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Account Settings</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountSettings;","C:\\Users\\FamilyPC\\client\\src\\components\\Header.tsx",["102","103"],"import React, { Component } from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport SettingsPhoneIcon from '@material-ui/icons/SettingsPhone';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\ntype HeaderState = {\r\n\r\n}\r\n\r\ntype HeaderProps = {\r\n\r\n}\r\n\r\nclass Header extends React.Component<{}, HeaderState> {\r\n    constructor(props: HeaderProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-bar-container\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" className=\"title\"></Typography>\r\n                        <nav>\r\n                            <NavLink className=\"icon-container\" to=\"/features/medicine\" activeClassName=\"icon-container-active\">\r\n                                <LocalHospitalIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Medicines</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/contactsettings\" activeClassName=\"icon-container-active\">\r\n                                <SettingsPhoneIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Calls</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/alarms\" activeClassName=\"icon-container-active\">\r\n                                <AccessAlarmIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Alarms</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/schedule\" activeClassName=\"icon-container-active\">\r\n                                <EventIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Schedule</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/accountsettings\" activeClassName=\"icon-container-active\">\r\n                                <AccountCircle className=\"icon\" />\r\n                                <div className=\"icon-description\">Account</div>\r\n                            </NavLink>\r\n                        </nav>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\FamilyPC\\client\\src\\components\\Splash.tsx",[],"C:\\Users\\FamilyPC\\client\\src\\components\\Login.tsx",["104"],"import React, { Component } from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport PasswordInput from './PasswordInput';\r\n\r\nimport * as auth from '../api/auth';\r\n\r\n\r\nimport './Login.css';\r\n\r\nenum LoginFailureType {\r\n    BAD_EMAIL_PASSWORD,\r\n    INTERNAL_SERVER_ERROR,\r\n    NONE\r\n}\r\n\r\ntype LoginState = {\r\n    email: string,\r\n    password: string,\r\n    submitIsTouched: boolean,\r\n    loginFailureType: LoginFailureType\r\n}\r\n\r\ntype LoginProps = {}\r\n\r\n\r\nclass Login extends React.Component<{}, LoginState> {\r\n    constructor(props: LoginProps) {\r\n        super(props);\r\n\r\n        this.state = { email: '', password: '', submitIsTouched: false, loginFailureType: LoginFailureType.NONE };\r\n        \r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n    }\r\n\r\n    handleEmailChange(e: any) {\r\n        const email = e.target.value;\r\n        this.setState({email});\r\n    }\r\n\r\n    emailHasError(): boolean {\r\n        const { email, submitIsTouched } = this.state;\r\n        return email.length === 0 && submitIsTouched;\r\n    }\r\n    handlePasswordChange(e: any) {\r\n        const password = e.target.value;\r\n        this.setState({password});\r\n    }\r\n\r\n    passwordHasError(): boolean {\r\n        const { password, submitIsTouched } = this.state;\r\n        return password.length === 0 && submitIsTouched;\r\n    }\r\n\r\n    hasFormError(): boolean {\r\n        return this.state.loginFailureType !== LoginFailureType.NONE;\r\n    }\r\n\r\n    getFormErrorText() {\r\n        if (this.state.loginFailureType === LoginFailureType.BAD_EMAIL_PASSWORD) {\r\n            return 'The password you’ve entered is incorrect.';\r\n        }\r\n        else if ( this.state.loginFailureType === LoginFailureType.INTERNAL_SERVER_ERROR ) {\r\n            return 'Uh-oh! A problem occured. Please refresh the page and try again.';\r\n        }\r\n\r\n        return \"\";\r\n    }\r\n\r\n    async handleSubmit() {\r\n        const { email, password } = this.state;\r\n\r\n        this.setState({submitIsTouched: true, loginFailureType: LoginFailureType.NONE});\r\n\r\n        if ( email.length === 0 || password.length === 0 ) {\r\n\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await auth.login(email,password); // Set React Context to isLoggedIn\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 401 ) {\r\n                this.setState({loginFailureType: LoginFailureType.BAD_EMAIL_PASSWORD});\r\n            }\r\n            else if ( error.response.status === 500 ) {\r\n                this.setState({loginFailureType: LoginFailureType.INTERNAL_SERVER_ERROR});\r\n            }\r\n            else {\r\n                console.error('Unhandled error'); // TODO: Handle this\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login-container\">\r\n                <div className=\"login\">\r\n                    <Typography className=\"login-header\" color=\"primary\" variant=\"h4\">Login to Your Account</Typography>\r\n                    <form className=\"login-form\">\r\n                        <TextField onChange={this.handleEmailChange} className=\"login-txt-field\" label=\"Email\" variant=\"filled\" error={this.emailHasError()} helperText=\"Enter your email\"/>\r\n                        <PasswordInput onChange={this.handlePasswordChange} inputProps={{ maxLength: 32 }} className=\"login-txt-field\" error={this.passwordHasError()} helperText=\"Enter your password\" label=\"Password\"/>\r\n                        <Button onClick={this.handleSubmit} className=\"login-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Login</Button>\r\n                        <FormHelperText className={`login-err ${this.hasFormError() ? \"\" : \"display-none\"}`} error={true}>{this.getFormErrorText()}</FormHelperText>\r\n                        <div className=\"non-important-btns-container\">\r\n                            <Button className=\"non-important-btn\" color=\"primary\">Create Account</Button>\r\n                            <Button className=\"non-important-btn\" color=\"primary\">Forgot Password?</Button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\Users\\FamilyPC\\client\\src\\components\\Register.tsx",["105"],"import React, { Component } from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport PasswordInput from './PasswordInput';\r\n\r\nimport * as auth from '../api/auth';\r\n\r\n\r\n\r\nimport './Register.css';\r\n\r\ntype RegisterState = {\r\n    email: string,\r\n    password: string,\r\n    emailIsTouched: boolean,\r\n    passwordIsTouched: boolean,\r\n    submitIsTouched: boolean,\r\n    emailIsTaken: boolean,\r\n    internalServerError: boolean\r\n}\r\n\r\ntype RegisterProps = {}\r\n\r\nclass Register extends React.Component<{}, RegisterState> {\r\n    constructor(props: RegisterProps) {\r\n        super(props);\r\n\r\n        this.state = { email: '', password: '', emailIsTouched: false, passwordIsTouched: false, submitIsTouched: false, emailIsTaken: false, internalServerError: false };\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n    }\r\n\r\n    handleEmailChange(e: any) {\r\n        const email = e.target.value;\r\n        this.setState({email, emailIsTouched: true, emailIsTaken: false});\r\n    }\r\n\r\n    isValidEmail(): boolean {\r\n        const email = this.state.email;\r\n\r\n        const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        return regex.test(String(email).toLowerCase());\r\n    }\r\n\r\n    passwordHasCorrectLength(): boolean {\r\n        const password = this.state.password;\r\n\r\n        return password.length >= 8 && password.length <= 32;\r\n    }\r\n\r\n    // Checks if the password contains numbers, letters, and special characters\r\n    passwordIsValid(): boolean {\r\n        const password = this.state.password;\r\n\r\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,32}$/\r\n\r\n        return regex.test(password);\r\n    }\r\n\r\n    handlePasswordChange(e: any) {\r\n        const password = e.target.value;\r\n        this.setState({password, passwordIsTouched: true});\r\n    }\r\n\r\n    emailHasError(): boolean {\r\n        const { submitIsTouched } = this.state;\r\n\r\n        return !this.isValidEmail() && submitIsTouched;\r\n    }\r\n\r\n    getEmailHelperText(): string {\r\n        if ( this.emailHasError() ) {\r\n            return 'Please enter a valid email';\r\n        }\r\n        else if ( this.state.emailIsTaken ) {\r\n            return 'This email is taken, try another.';\r\n        }\r\n        \r\n        return 'Enter your email';\r\n    }\r\n\r\n    passwordHasError(): boolean {\r\n        const { submitIsTouched } = this.state;\r\n\r\n        return !this.passwordIsValid() && submitIsTouched;\r\n    }\r\n\r\n    getPasswordHelperText(): string {\r\n        if ( !this.passwordHasError() ) {\r\n            return 'Enter a password';\r\n        }\r\n        else if ( this.passwordHasCorrectLength() ) {\r\n            return 'Enter between 8 and 32 characters';\r\n        }\r\n    \r\n        return 'Include a letter, number, and special character';\r\n    }\r\n\r\n    hasIternalServerError(): boolean {\r\n        return this.state.internalServerError;\r\n    }\r\n\r\n    async handleSubmit() {\r\n        const { email, password } = this.state;\r\n\r\n        this.setState({submitIsTouched: true, internalServerError: false});\r\n\r\n        if ( !this.isValidEmail() || !this.passwordIsValid() ) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await auth.register(email,password);\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 409 ) {\r\n                this.setState({emailIsTaken: true});\r\n            }\r\n            else if ( error.response.status === 500 ) {\r\n                this.setState({internalServerError: true});\r\n            }\r\n            else {\r\n                console.error('Unhandled error'); // TODO: Handle this\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"register-container\">\r\n                <div className=\"register\">\r\n                    <Typography className=\"register-header\" color=\"primary\" variant=\"h4\">Create a New Account</Typography>\r\n                    <form className=\"register-form\">\r\n                        <TextField onChange={this.handleEmailChange} name=\"email\" className=\"register-txt-field\" label=\"Email\" variant=\"filled\" error={this.emailHasError() || this.state.emailIsTaken} helperText={this.getEmailHelperText()}/>\r\n                \r\n                        <PasswordInput inputProps={{ maxLength: 32 }} onChange={this.handlePasswordChange} className=\"register-txt-field\" label=\"Password\" error={this.passwordHasError()} helperText={this.getPasswordHelperText()} />\r\n\r\n                        <Button onClick={this.handleSubmit} className=\"register-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Register</Button>\r\n\r\n                        <FormHelperText className={ this.hasIternalServerError() ? \"\" : \"display-none\"} error={true}>Uh-oh! A problem occured. Please refresh the page and try again.</FormHelperText>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","C:\\Users\\FamilyPC\\client\\src\\components\\PasswordInput.tsx",["106"],"import { InputAdornment } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport React, {Component } from 'react';\r\n\r\nimport './PasswordInput.css';\r\n\r\ntype PasswordInputState = {\r\n    passwordIsMasked: boolean\r\n}\r\n\r\n//https://itnext.io/building-a-toggled-mask-password-input-component-w-react-and-material-ui-f55e6bd73434\r\n\r\n\r\ntype PasswordInputProps = {\r\n    classes?: any,\r\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    value?: string,\r\n    error?: boolean,\r\n    helperText?: string,\r\n    label?: string,\r\n    className?: string,\r\n    inputProps?: object,\r\n}\r\n\r\nclass PasswordInput extends Component<PasswordInputProps, PasswordInputState> {\r\n    constructor(props: PasswordInputProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            passwordIsMasked: true\r\n        };\r\n    }\r\n\r\n    togglePasswordMask = () => {\r\n        this.setState(prevState => ({\r\n            passwordIsMasked: !prevState.passwordIsMasked\r\n        }));\r\n    }\r\n\r\n    getVisibilityIcon() {\r\n        if ( this.state.passwordIsMasked ) {\r\n            return (\r\n                <VisibilityIcon color=\"primary\" onClick={this.togglePasswordMask} className=\"clickable-icon\"/>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <VisibilityOffIcon color=\"primary\" onClick={this.togglePasswordMask} className=\"clickable-icon\"/>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { passwordIsMasked } = this.state;\r\n\r\n        return (\r\n            <TextField\r\n                variant=\"filled\"\r\n                type={passwordIsMasked ? 'password' : 'text'}\r\n                {...this.props}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {this.getVisibilityIcon()}\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PasswordInput;","C:\\Users\\FamilyPC\\client\\src\\api\\auth.tsx",["107","108"],"// TODO: Should I rename this?\r\n\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\n\r\n// TODO: Return type\r\nexport const register = (email: string, password: string) => {\r\n    return axios.post('/api/users', {\r\n        email, password\r\n    });\r\n}\r\n\r\nexport const login = (email: string, password: string) => {\r\n    return axios.post('/api/users/login', {\r\n        email, password\r\n    });\r\n}\r\n",["109","110"],{"ruleId":"111","severity":1,"message":"112","line":5,"column":25,"nodeType":"113","messageId":"114","endLine":5,"endColumn":44},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"119","line":3,"column":25,"nodeType":"113","messageId":"114","endLine":3,"endColumn":35},{"ruleId":"111","severity":1,"message":"120","line":3,"column":37,"nodeType":"113","messageId":"114","endLine":3,"endColumn":43},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"111","severity":1,"message":"121","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":30},{"ruleId":"111","severity":1,"message":"122","line":1,"column":32,"nodeType":"113","messageId":"114","endLine":1,"endColumn":42},{"ruleId":"123","severity":1,"message":"124","line":13,"column":3,"nodeType":"125","messageId":"126","endLine":15,"endColumn":2},{"ruleId":"111","severity":1,"message":"127","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":12,"column":5,"nodeType":"125","messageId":"126","endLine":14,"endColumn":6},{"ruleId":"111","severity":1,"message":"127","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":12,"column":5,"nodeType":"125","messageId":"126","endLine":14,"endColumn":6},{"ruleId":"111","severity":1,"message":"127","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":12,"column":5,"nodeType":"125","messageId":"126","endLine":14,"endColumn":6},{"ruleId":"111","severity":1,"message":"127","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":12,"column":5,"nodeType":"125","messageId":"126","endLine":14,"endColumn":6},{"ruleId":"111","severity":1,"message":"127","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":12,"column":5,"nodeType":"125","messageId":"126","endLine":14,"endColumn":6},{"ruleId":"111","severity":1,"message":"127","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"123","severity":1,"message":"124","line":24,"column":5,"nodeType":"125","messageId":"126","endLine":26,"endColumn":6},{"ruleId":"111","severity":1,"message":"127","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"127","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":26},{"ruleId":"111","severity":1,"message":"128","line":55,"column":17,"nodeType":"113","messageId":"114","endLine":55,"endColumn":24},{"ruleId":"111","severity":1,"message":"129","line":3,"column":17,"nodeType":"113","messageId":"114","endLine":3,"endColumn":27},{"ruleId":"111","severity":1,"message":"130","line":3,"column":29,"nodeType":"113","messageId":"114","endLine":3,"endColumn":42},{"ruleId":"115","replacedBy":"131"},{"ruleId":"117","replacedBy":"132"},"@typescript-eslint/no-unused-vars","'responsiveFontSizes' is defined but never used.","Identifier","unusedVar","no-native-reassign",["133"],"no-negated-in-lhs",["134"],"'useHistory' is defined but never used.","'Switch' is defined but never used.","'ReactChildren' is defined but never used.","'ReactChild' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Component' is defined but never used.","'classes' is assigned a value but never used.","'AxiosError' is defined but never used.","'AxiosResponse' is defined but never used.",["133"],["134"],"no-global-assign","no-unsafe-negation"]