[{"C:\\Users\\albin\\RNClient\\src\\index.tsx":"1","C:\\Users\\albin\\RNClient\\src\\theme.js":"2","C:\\Users\\albin\\RNClient\\src\\contexts\\authContext.js":"3","C:\\Users\\albin\\RNClient\\src\\App.tsx":"4","C:\\Users\\albin\\RNClient\\src\\api\\auth.tsx":"5","C:\\Users\\albin\\RNClient\\src\\components\\Medicine.tsx":"6","C:\\Users\\albin\\RNClient\\src\\components\\Main.tsx":"7","C:\\Users\\albin\\RNClient\\src\\components\\ContactSettings.tsx":"8","C:\\Users\\albin\\RNClient\\src\\components\\Alarms.tsx":"9","C:\\Users\\albin\\RNClient\\src\\components\\Schedule.tsx":"10","C:\\Users\\albin\\RNClient\\src\\components\\Splash.tsx":"11","C:\\Users\\albin\\RNClient\\src\\components\\Login.tsx":"12","C:\\Users\\albin\\RNClient\\src\\components\\AccountSettings.tsx":"13","C:\\Users\\albin\\RNClient\\src\\components\\PrivateRoute.tsx":"14","C:\\Users\\albin\\RNClient\\src\\components\\Register.tsx":"15","C:\\Users\\albin\\RNClient\\src\\components\\Header.tsx":"16","C:\\Users\\albin\\RNClient\\src\\components\\PasswordInput.tsx":"17","C:\\Users\\albin\\RNClient\\src\\components\\ForgotPassword.tsx":"18"},{"size":504,"mtime":1609012577952,"results":"19","hashOfConfig":"20"},{"size":388,"mtime":1609012577957,"results":"21","hashOfConfig":"20"},{"size":649,"mtime":1609012577941,"results":"22","hashOfConfig":"20"},{"size":1637,"mtime":1609017987465,"results":"23","hashOfConfig":"20"},{"size":675,"mtime":1609012577921,"results":"24","hashOfConfig":"20"},{"size":356,"mtime":1609012577931,"results":"25","hashOfConfig":"20"},{"size":473,"mtime":1609012577931,"results":"26","hashOfConfig":"20"},{"size":403,"mtime":1609012577925,"results":"27","hashOfConfig":"20"},{"size":344,"mtime":1609012577923,"results":"28","hashOfConfig":"20"},{"size":356,"mtime":1609012577938,"results":"29","hashOfConfig":"20"},{"size":827,"mtime":1609012577940,"results":"30","hashOfConfig":"20"},{"size":5830,"mtime":1609019468997,"results":"31","hashOfConfig":"20"},{"size":1204,"mtime":1609012577923,"results":"32","hashOfConfig":"20"},{"size":962,"mtime":1609019313272,"results":"33","hashOfConfig":"20"},{"size":6096,"mtime":1609012577936,"results":"34","hashOfConfig":"20"},{"size":2810,"mtime":1609012577928,"results":"35","hashOfConfig":"20"},{"size":2151,"mtime":1609012577934,"results":"36","hashOfConfig":"20"},{"size":1180,"mtime":1609018089190,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"qb86pm",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"40"},"C:\\Users\\albin\\RNClient\\src\\index.tsx",[],["89","90"],"C:\\Users\\albin\\RNClient\\src\\theme.js",[],["91","92"],"C:\\Users\\albin\\RNClient\\src\\contexts\\authContext.js",[],"C:\\Users\\albin\\RNClient\\src\\App.tsx",["93","94","95","96"],"import React, { createContext, useState, useContext } from 'react';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport ContactSettings from './components/ContactSettings';\r\nimport Main from './components/Main';\r\nimport Medicine from './components/Medicine';\r\nimport Alarms from './components/Alarms';\r\nimport Schedule from './components/Schedule';\r\nimport AccountSettings from './components/AccountSettings';\r\nimport Splash from './components/Splash';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport ForgotPassword from './components/ForgotPassword';\r\n\r\nimport { AuthContextConsumer } from './contexts/authContext';\r\n\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n\r\n\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/forgotpassword\" component={ForgotPassword} />\r\n        <Route exact path=\"/\" component={Splash} />\r\n        <PrivateRoute path=\"/features\">\r\n          <Main>\r\n            <Route path=\"/features/medicine\" component={Medicine} />\r\n            <Route path=\"/features/contactsettings\" component={ContactSettings} />\r\n            <Route path=\"/features/alarms\" component={Alarms} />\r\n            <Route path=\"/features/schedule\" component={Schedule} />\r\n            <Route path=\"/features/accountsettings\" component={AccountSettings} />\r\n          </Main>\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\albin\\RNClient\\src\\api\\auth.tsx",["97","98"],"// TODO: Should I rename this?\r\n\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\n// TODO: Return type\r\nexport const register = (email: string, password: string) => {\r\n    return axios.post('/api/users', {\r\n        email, password\r\n    });\r\n}\r\n\r\nexport const login = (email: string, password: string) => {\r\n    return axios.post('/api/users/login', {\r\n        email, password\r\n    });\r\n}\r\n\r\nexport const logout = () => {\r\n    return axios.delete('/api/users/logout');\r\n}\r\n\r\nexport const hasLoginCookie = (): boolean => {\r\n    const cookies: Cookies = new Cookies();\r\n    return cookies.get('jwt') ? true : false;\r\n}\r\n","C:\\Users\\albin\\RNClient\\src\\components\\Medicine.tsx",["99","100"],"import React, { Component } from 'react';\r\n\r\ntype MedicineState = {\r\n  \r\n}\r\n\r\ntype MedicineProps = {\r\n\r\n}\r\n\r\nclass Medicine extends React.Component<{}, MedicineState> {\r\n    constructor(props: MedicineProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Medicine</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Medicine;","C:\\Users\\albin\\RNClient\\src\\components\\Main.tsx",["101","102","103"],"import React, { ReactChildren, ReactChild } from 'react';\r\n\r\n\r\nimport Header from './Header';\r\n\r\ninterface MainProps {\r\n  children: any; /* ReactChild | ReactChildren; */\r\n}\r\n\r\ninterface MainState {}\r\n\r\nclass Main extends React.Component <{}, MainState > {\r\n  constructor(props: MainProps) {\r\n    super(props);\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <main>{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","C:\\Users\\albin\\RNClient\\src\\components\\ContactSettings.tsx",["104","105"],"import React, { Component } from 'react';\r\n\r\ntype ContactSettingsState = {\r\n\r\n}\r\n\r\ntype ContactSettingsProps = {\r\n\r\n}\r\n\r\nclass ContactSettings extends React.Component<{}, ContactSettingsState> {\r\n    constructor(props: ContactSettingsProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>ContactSettings</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactSettings;","C:\\Users\\albin\\RNClient\\src\\components\\Alarms.tsx",["106","107"],"import React, { Component } from 'react';\r\n\r\ntype AlarmsState = {\r\n  \r\n}\r\n\r\ntype AlarmsProps = {\r\n\r\n}\r\n\r\nclass Alarms extends React.Component<{}, AlarmsState> {\r\n    constructor(props: AlarmsProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <h1>Alarms</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Alarms;","C:\\Users\\albin\\RNClient\\src\\components\\Schedule.tsx",["108","109"],"import React, { Component } from 'react';\r\n\r\ntype ScheduleState = {\r\n  \r\n}\r\n\r\ntype ScheduleProps = {\r\n\r\n}\r\n\r\nclass Schedule extends React.Component<{}, ScheduleState> {\r\n    constructor(props: ScheduleProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Schedule</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Schedule;","C:\\Users\\albin\\RNClient\\src\\components\\Splash.tsx",[],"C:\\Users\\albin\\RNClient\\src\\components\\Login.tsx",["110","111"],"C:\\Users\\albin\\RNClient\\src\\components\\AccountSettings.tsx",["112","113"],"import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport * as auth from '../api/auth';\r\n\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\ntype AccountSettingsState = {\r\n  \r\n}\r\n\r\ntype AccountSettingsProps = {\r\n    history: any;\r\n}\r\n\r\nclass AccountSettings extends React.Component<AccountSettingsProps, AccountSettingsState> {\r\n    constructor(props: AccountSettingsProps) {\r\n        super(props);\r\n    }\r\n\r\n    handleSubmit(callback: any) {\r\n        try {\r\n            auth.logout();\r\n\r\n            callback();\r\n\r\n            this.props.history.push('/login');\r\n        }\r\n        catch(error) {\r\n            console.log('error',error)\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Account Settings</h1>\r\n\r\n                <AuthContextConsumer>\r\n                {context => (\r\n                    <Button onClick={ e => this.handleSubmit(context.logout)} className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Logout</Button>\r\n                )}\r\n                </AuthContextConsumer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountSettings;","C:\\Users\\albin\\RNClient\\src\\components\\PrivateRoute.tsx",["114","115"],"C:\\Users\\albin\\RNClient\\src\\components\\Register.tsx",["116"],"import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport PasswordInput from './PasswordInput';\r\n\r\n\r\n\r\nimport * as auth from '../api/auth';\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport './Register.css';\r\n\r\ntype RegisterState = {\r\n    email: string,\r\n    password: string,\r\n    emailIsTouched: boolean,\r\n    passwordIsTouched: boolean,\r\n    submitIsTouched: boolean,\r\n    emailIsTaken: boolean,\r\n    internalServerError: boolean\r\n}\r\n\r\ntype RegisterProps = {\r\n    history: any // TODO: Type\r\n}\r\n\r\nclass Register extends React.Component<RegisterProps, RegisterState> {\r\n    constructor(props: RegisterProps) {\r\n        super(props);\r\n\r\n        this.state = { email: '', password: '', emailIsTouched: false, passwordIsTouched: false, submitIsTouched: false, emailIsTaken: false, internalServerError: false };\r\n        \r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n    }\r\n\r\n    handleEmailChange(e: any) {\r\n        const email = e.target.value;\r\n        this.setState({email, emailIsTouched: true, emailIsTaken: false});\r\n    }\r\n\r\n    isValidEmail(): boolean {\r\n        const email = this.state.email;\r\n\r\n        const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        return regex.test(email);\r\n    }\r\n\r\n    passwordHasCorrectLength(): boolean {\r\n        const password = this.state.password;\r\n\r\n        return password.length >= 8 && password.length <= 32;\r\n    }\r\n\r\n    // Checks if the password contains numbers, letters, and special characters\r\n    passwordIsValid(): boolean {\r\n        const password = this.state.password;\r\n\r\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,32}$/\r\n\r\n        return regex.test(password);\r\n    }\r\n\r\n    handlePasswordChange(e: any) {\r\n        const password = e.target.value;\r\n        this.setState({password, passwordIsTouched: true});\r\n    }\r\n\r\n    emailHasError(): boolean {\r\n        const { submitIsTouched } = this.state;\r\n\r\n        return !this.isValidEmail() && submitIsTouched;\r\n    }\r\n\r\n    getEmailHelperText(): string {\r\n        if ( this.emailHasError() ) {\r\n            return 'Please enter a valid email';\r\n        }\r\n        else if ( this.state.emailIsTaken ) {\r\n            return 'This email is taken, try another.';\r\n        }\r\n        \r\n        return 'Enter your email';\r\n    }\r\n\r\n    passwordHasError(): boolean {\r\n        const { submitIsTouched } = this.state;\r\n\r\n        return !this.passwordIsValid() && submitIsTouched;\r\n    }\r\n\r\n    getPasswordHelperText(): string {\r\n        if ( !this.passwordHasError() ) {\r\n            return 'Enter a password';\r\n        }\r\n        else if ( this.passwordHasCorrectLength() ) {\r\n            return 'Enter between 8 and 32 characters';\r\n        }\r\n    \r\n        return 'Include a letter, number, and special character';\r\n    }\r\n\r\n    hasInternalServerError(): boolean {\r\n        return this.state.internalServerError;\r\n    }\r\n\r\n    async handleSubmit(callback: any) {\r\n        const { email, password } = this.state;\r\n\r\n        this.setState({submitIsTouched: true, internalServerError: false});\r\n\r\n        if ( !this.isValidEmail() || !this.passwordIsValid() ) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await auth.register(email,password);\r\n            \r\n            callback();\r\n   \r\n            this.props.history.push('/features/schedule');\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 409 ) {\r\n                this.setState({emailIsTaken: true});\r\n            }\r\n            else if ( error.response.status === 500 ) {\r\n                this.setState({internalServerError: true});\r\n            }\r\n            else {\r\n                console.error('Unhandled error'); // TODO: Handle this\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Create a New Account</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <TextField onChange={this.handleEmailChange} name=\"email\" className=\"auth-txt-field\" label=\"Email\" variant=\"filled\" error={this.emailHasError() || this.state.emailIsTaken} helperText={this.getEmailHelperText()}/>\r\n                        <PasswordInput inputProps={{ maxLength: 32 }} onChange={this.handlePasswordChange} className=\"auth-txt-field\" label=\"Password\" error={this.passwordHasError()} helperText={this.getPasswordHelperText()} />\r\n                        <AuthContextConsumer>\r\n                        {context => (\r\n                            <Button onClick={e => this.handleSubmit(context.login)} className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Register</Button>\r\n                        )}\r\n                        </AuthContextConsumer>\r\n                        <FormHelperText className={`auth-err ${this.hasInternalServerError() ? \"\" : \"display-none\"}`} error={true}>Uh-oh! A problem occured. Please refresh the page and try again.</FormHelperText>\r\n                        <div className=\"non-important-btns-container\">\r\n                            <Link className=\"no-underline\" to=\"/login\">\r\n                                <Button className=\"already-registered-btn non-important-btn\" color=\"primary\">Already Have an Account?</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","C:\\Users\\albin\\RNClient\\src\\components\\Header.tsx",["117","118"],"import React, { Component } from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport SettingsPhoneIcon from '@material-ui/icons/SettingsPhone';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\ntype HeaderState = {\r\n\r\n}\r\n\r\ntype HeaderProps = {\r\n\r\n}\r\n\r\nclass Header extends React.Component<{}, HeaderState> {\r\n    constructor(props: HeaderProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-bar-container\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" className=\"title\"></Typography>\r\n                        <nav>\r\n                            <NavLink className=\"icon-container\" to=\"/features/medicine\" activeClassName=\"icon-container-active\">\r\n                                <LocalHospitalIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Medicines</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/contactsettings\" activeClassName=\"icon-container-active\">\r\n                                <SettingsPhoneIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Calls</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/alarms\" activeClassName=\"icon-container-active\">\r\n                                <AccessAlarmIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Alarms</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/schedule\" activeClassName=\"icon-container-active\">\r\n                                <EventIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Schedule</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/accountsettings\" activeClassName=\"icon-container-active\">\r\n                                <AccountCircle className=\"icon\" />\r\n                                <div className=\"icon-description\">Account</div>\r\n                            </NavLink>\r\n                        </nav>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\albin\\RNClient\\src\\components\\PasswordInput.tsx",["119"],"import { InputAdornment } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport React, {Component } from 'react';\r\n\r\nimport './PasswordInput.css';\r\n\r\ntype PasswordInputState = {\r\n    passwordIsMasked: boolean\r\n}\r\n\r\n//https://itnext.io/building-a-toggled-mask-password-input-component-w-react-and-material-ui-f55e6bd73434\r\n\r\n\r\ntype PasswordInputProps = {\r\n    classes?: any,\r\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    value?: string,\r\n    error?: boolean,\r\n    helperText?: string,\r\n    label?: string,\r\n    className?: string,\r\n    inputProps?: object,\r\n}\r\n\r\nclass PasswordInput extends Component<PasswordInputProps, PasswordInputState> {\r\n    constructor(props: PasswordInputProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            passwordIsMasked: true\r\n        };\r\n    }\r\n\r\n    togglePasswordMask = () => {\r\n        this.setState(prevState => ({\r\n            passwordIsMasked: !prevState.passwordIsMasked\r\n        }));\r\n    }\r\n\r\n    getVisibilityIcon() {\r\n        if ( this.state.passwordIsMasked ) {\r\n            return (\r\n                <VisibilityIcon color=\"primary\" onClick={this.togglePasswordMask} className=\"clickable-icon\"/>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <VisibilityOffIcon color=\"primary\" onClick={this.togglePasswordMask} className=\"clickable-icon\"/>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { passwordIsMasked } = this.state;\r\n\r\n        return (\r\n            <TextField\r\n                variant=\"filled\"\r\n                type={passwordIsMasked ? 'password' : 'text'}\r\n                {...this.props}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {this.getVisibilityIcon()}\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PasswordInput;",["120","121"],"C:\\Users\\albin\\RNClient\\src\\components\\ForgotPassword.tsx",["122","123","124","125","126","127","128","129"],"import React, { Component, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport PasswordInput from './PasswordInput';\r\n\r\nimport * as auth from '../api/auth';\r\n\r\nimport './ForgotPassword.css';\r\n\r\ntype ForgotPasswordState = {\r\n}\r\n\r\ntype ForgotPasswordProps = {\r\n}\r\n\r\nclass ForgotPassword extends React.Component<ForgotPasswordProps, ForgotPasswordState> {\r\n    constructor(props: ForgotPasswordProps) {\r\n        super(props);\r\n\r\n        this.state = { };\r\n    }\r\n\r\n    // TODO: Think of a better header title\r\n    render() {\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Forgot Password</Typography>\r\n                    <form className=\"auth-form\">\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ForgotPassword;",{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":30},{"ruleId":"134","severity":1,"message":"138","line":1,"column":32,"nodeType":"136","messageId":"137","endLine":1,"endColumn":40},{"ruleId":"134","severity":1,"message":"139","line":1,"column":42,"nodeType":"136","messageId":"137","endLine":1,"endColumn":52},{"ruleId":"134","severity":1,"message":"140","line":15,"column":10,"nodeType":"136","messageId":"137","endLine":15,"endColumn":29},{"ruleId":"134","severity":1,"message":"141","line":3,"column":17,"nodeType":"136","messageId":"137","endLine":3,"endColumn":27},{"ruleId":"134","severity":1,"message":"142","line":3,"column":29,"nodeType":"136","messageId":"137","endLine":3,"endColumn":42},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":12,"column":5,"nodeType":"146","messageId":"147","endLine":14,"endColumn":6},{"ruleId":"134","severity":1,"message":"148","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":30},{"ruleId":"134","severity":1,"message":"149","line":1,"column":32,"nodeType":"136","messageId":"137","endLine":1,"endColumn":42},{"ruleId":"144","severity":1,"message":"145","line":13,"column":3,"nodeType":"146","messageId":"147","endLine":15,"endColumn":2},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":12,"column":5,"nodeType":"146","messageId":"147","endLine":14,"endColumn":6},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":12,"column":5,"nodeType":"146","messageId":"147","endLine":14,"endColumn":6},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":12,"column":5,"nodeType":"146","messageId":"147","endLine":14,"endColumn":6},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"139","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":38},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":19,"column":5,"nodeType":"146","messageId":"147","endLine":21,"endColumn":6},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":12,"column":5,"nodeType":"146","messageId":"147","endLine":14,"endColumn":6},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"144","severity":1,"message":"145","line":24,"column":5,"nodeType":"146","messageId":"147","endLine":26,"endColumn":6},{"ruleId":"134","severity":1,"message":"150","line":55,"column":17,"nodeType":"136","messageId":"137","endLine":55,"endColumn":24},{"ruleId":"130","replacedBy":"151"},{"ruleId":"132","replacedBy":"152"},{"ruleId":"134","severity":1,"message":"143","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":26},{"ruleId":"134","severity":1,"message":"139","line":1,"column":28,"nodeType":"136","messageId":"137","endLine":1,"endColumn":38},{"ruleId":"134","severity":1,"message":"153","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"154","line":5,"column":8,"nodeType":"136","messageId":"137","endLine":5,"endColumn":14},{"ruleId":"134","severity":1,"message":"155","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":17},{"ruleId":"134","severity":1,"message":"156","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":22},{"ruleId":"134","severity":1,"message":"157","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":21},{"ruleId":"134","severity":1,"message":"158","line":11,"column":13,"nodeType":"136","messageId":"137","endLine":11,"endColumn":17},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useContext' is defined but never used.","'AuthContextConsumer' is defined but never used.","'AxiosError' is defined but never used.","'AxiosResponse' is defined but never used.","'Component' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ReactChildren' is defined but never used.","'ReactChild' is defined but never used.","'classes' is assigned a value but never used.",["159"],["160"],"'Link' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'FormHelperText' is defined but never used.","'PasswordInput' is defined but never used.","'auth' is defined but never used.","no-global-assign","no-unsafe-negation"]