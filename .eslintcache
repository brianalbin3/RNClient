[{"C:\\Users\\FamilyPC\\client\\src\\index.tsx":"1","C:\\Users\\FamilyPC\\client\\src\\theme.js":"2","C:\\Users\\FamilyPC\\client\\src\\contexts\\authContext.js":"3","C:\\Users\\FamilyPC\\client\\src\\App.tsx":"4","C:\\Users\\FamilyPC\\client\\src\\api\\auth.tsx":"5","C:\\Users\\FamilyPC\\client\\src\\components\\ContactSettings.tsx":"6","C:\\Users\\FamilyPC\\client\\src\\components\\Medicine.tsx":"7","C:\\Users\\FamilyPC\\client\\src\\components\\Alarms.tsx":"8","C:\\Users\\FamilyPC\\client\\src\\components\\Schedule.tsx":"9","C:\\Users\\FamilyPC\\client\\src\\components\\Main.tsx":"10","C:\\Users\\FamilyPC\\client\\src\\components\\AccountSettings.tsx":"11","C:\\Users\\FamilyPC\\client\\src\\components\\Splash.tsx":"12","C:\\Users\\FamilyPC\\client\\src\\components\\Register.tsx":"13","C:\\Users\\FamilyPC\\client\\src\\components\\PrivateRoute.tsx":"14","C:\\Users\\FamilyPC\\client\\src\\components\\Login.tsx":"15","C:\\Users\\FamilyPC\\client\\src\\components\\PasswordInput.tsx":"16","C:\\Users\\FamilyPC\\client\\src\\components\\Header.tsx":"17","C:\\Users\\FamilyPC\\client\\src\\api\\user.tsx":"18","C:\\Users\\FamilyPC\\client\\src\\components\\FindAccount.tsx":"19","C:\\Users\\FamilyPC\\client\\src\\components\\ResetPassword.tsx":"20"},{"size":504,"mtime":1608763000313,"results":"21","hashOfConfig":"22"},{"size":388,"mtime":1607739491786,"results":"23","hashOfConfig":"22"},{"size":649,"mtime":1608760470093,"results":"24","hashOfConfig":"22"},{"size":1751,"mtime":1609211036115,"results":"25","hashOfConfig":"22"},{"size":677,"mtime":1609265129821,"results":"26","hashOfConfig":"22"},{"size":403,"mtime":1607566268374,"results":"27","hashOfConfig":"22"},{"size":367,"mtime":1609292768031,"results":"28","hashOfConfig":"22"},{"size":344,"mtime":1607832473965,"results":"29","hashOfConfig":"22"},{"size":356,"mtime":1607567761346,"results":"30","hashOfConfig":"22"},{"size":473,"mtime":1607666723699,"results":"31","hashOfConfig":"22"},{"size":1204,"mtime":1608787930612,"results":"32","hashOfConfig":"22"},{"size":827,"mtime":1608440931949,"results":"33","hashOfConfig":"22"},{"size":6096,"mtime":1608994985127,"results":"34","hashOfConfig":"22"},{"size":962,"mtime":1609041310200,"results":"35","hashOfConfig":"22"},{"size":5824,"mtime":1609204491681,"results":"36","hashOfConfig":"22"},{"size":2151,"mtime":1608346501545,"results":"37","hashOfConfig":"22"},{"size":2810,"mtime":1607737706477,"results":"38","hashOfConfig":"22"},{"size":175,"mtime":1609133327509,"results":"39","hashOfConfig":"22"},{"size":3608,"mtime":1609265180620,"results":"40","hashOfConfig":"22"},{"size":4553,"mtime":1609384149971,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"187ra08",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"44"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"44"},"C:\\Users\\FamilyPC\\client\\src\\index.tsx",[],["101","102"],"C:\\Users\\FamilyPC\\client\\src\\theme.js",[],["103","104"],"C:\\Users\\FamilyPC\\client\\src\\contexts\\authContext.js",[],"C:\\Users\\FamilyPC\\client\\src\\App.tsx",["105","106","107","108"],"import React, { createContext, useState, useContext } from 'react';\r\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\r\n\r\nimport ContactSettings from './components/ContactSettings';\r\nimport Main from './components/Main';\r\nimport Medicine from './components/Medicine';\r\nimport Alarms from './components/Alarms';\r\nimport Schedule from './components/Schedule';\r\nimport AccountSettings from './components/AccountSettings';\r\nimport Splash from './components/Splash';\r\nimport Login from './components/Login';\r\nimport Register from './components/Register';\r\nimport FindAccount from './components/FindAccount';\r\nimport ResetPassword from './components/ResetPassword';\r\n\r\nimport { AuthContextConsumer } from './contexts/authContext';\r\n\r\nimport PrivateRoute from './components/PrivateRoute';\r\n\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/register\" component={Register} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route exact path=\"/findaccount\" component={FindAccount} />\r\n        <Route exact path=\"/resetpassword\" component={ResetPassword} />\r\n        <Route exact path=\"/\" component={Splash} />\r\n        <PrivateRoute path=\"/features\">\r\n          <Main>\r\n            <Route path=\"/features/medicine\" component={Medicine} />\r\n            <Route path=\"/features/contactsettings\" component={ContactSettings} />\r\n            <Route path=\"/features/alarms\" component={Alarms} />\r\n            <Route path=\"/features/schedule\" component={Schedule} />\r\n            <Route path=\"/features/accountsettings\" component={AccountSettings} />\r\n          </Main>\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\FamilyPC\\client\\src\\api\\auth.tsx",["109","110"],"// TODO: Should I rename this?\r\n\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\n// TODO: Return type\r\nexport const register = (email: string, password: string) => {\r\n    return axios.post('/api/users', {\r\n        email, password\r\n    });\r\n}\r\n\r\nexport const login = (email: string, password: string) => {\r\n    return axios.post('/api/users/login', {\r\n        email, password\r\n    });\r\n}\r\n\r\nexport const logout = () => {\r\n    return axios.delete('/api/users/logout');\r\n}\r\n\r\nexport const hasLoginCookie = (): boolean => {\r\n    const cookies: Cookies = new Cookies();\r\n    return cookies.get('jwt') ? true : false;\r\n}\r\n\r\n","C:\\Users\\FamilyPC\\client\\src\\components\\ContactSettings.tsx",["111","112"],"import React, { Component } from 'react';\r\n\r\ntype ContactSettingsState = {\r\n\r\n}\r\n\r\ntype ContactSettingsProps = {\r\n\r\n}\r\n\r\nclass ContactSettings extends React.Component<{}, ContactSettingsState> {\r\n    constructor(props: ContactSettingsProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>ContactSettings</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContactSettings;","C:\\Users\\FamilyPC\\client\\src\\components\\Medicine.tsx",["113","114"],"import React, { Component } from 'react';\r\n\r\ntype MedicineState = {\r\n  \r\n}\r\n\r\ntype MedicineProps = {\r\n\r\n}\r\n\r\nclass Medicine extends React.Component<MedicineProps, MedicineState> {\r\n    constructor(props: MedicineProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Medicine</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Medicine;","C:\\Users\\FamilyPC\\client\\src\\components\\Alarms.tsx",["115","116"],"import React, { Component } from 'react';\r\n\r\ntype AlarmsState = {\r\n  \r\n}\r\n\r\ntype AlarmsProps = {\r\n\r\n}\r\n\r\nclass Alarms extends React.Component<{}, AlarmsState> {\r\n    constructor(props: AlarmsProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <h1>Alarms</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Alarms;","C:\\Users\\FamilyPC\\client\\src\\components\\Schedule.tsx",["117","118"],"import React, { Component } from 'react';\r\n\r\ntype ScheduleState = {\r\n  \r\n}\r\n\r\ntype ScheduleProps = {\r\n\r\n}\r\n\r\nclass Schedule extends React.Component<{}, ScheduleState> {\r\n    constructor(props: ScheduleProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h1>Schedule</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Schedule;","C:\\Users\\FamilyPC\\client\\src\\components\\Main.tsx",["119","120","121"],"import React, { ReactChildren, ReactChild } from 'react';\r\n\r\n\r\nimport Header from './Header';\r\n\r\ninterface MainProps {\r\n  children: any; /* ReactChild | ReactChildren; */\r\n}\r\n\r\ninterface MainState {}\r\n\r\nclass Main extends React.Component <{}, MainState > {\r\n  constructor(props: MainProps) {\r\n    super(props);\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <main>{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;","C:\\Users\\FamilyPC\\client\\src\\components\\AccountSettings.tsx",["122","123"],"import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nimport * as auth from '../api/auth';\r\n\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\ntype AccountSettingsState = {\r\n  \r\n}\r\n\r\ntype AccountSettingsProps = {\r\n    history: any;\r\n}\r\n\r\nclass AccountSettings extends React.Component<AccountSettingsProps, AccountSettingsState> {\r\n    constructor(props: AccountSettingsProps) {\r\n        super(props);\r\n    }\r\n\r\n    handleSubmit(callback: any) {\r\n        try {\r\n            auth.logout();\r\n\r\n            callback();\r\n\r\n            this.props.history.push('/login');\r\n        }\r\n        catch(error) {\r\n            console.log('error',error)\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Account Settings</h1>\r\n\r\n                <AuthContextConsumer>\r\n                {context => (\r\n                    <Button onClick={ e => this.handleSubmit(context.logout)} className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Logout</Button>\r\n                )}\r\n                </AuthContextConsumer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccountSettings;","C:\\Users\\FamilyPC\\client\\src\\components\\Splash.tsx",[],"C:\\Users\\FamilyPC\\client\\src\\components\\Register.tsx",["124"],"import React, { Component } from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport PasswordInput from './PasswordInput';\r\n\r\n\r\n\r\nimport * as auth from '../api/auth';\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nimport './Register.css';\r\n\r\ntype RegisterState = {\r\n    email: string,\r\n    password: string,\r\n    emailIsTouched: boolean,\r\n    passwordIsTouched: boolean,\r\n    submitIsTouched: boolean,\r\n    emailIsTaken: boolean,\r\n    internalServerError: boolean\r\n}\r\n\r\ntype RegisterProps = {\r\n    history: any // TODO: Type\r\n}\r\n\r\nclass Register extends React.Component<RegisterProps, RegisterState> {\r\n    constructor(props: RegisterProps) {\r\n        super(props);\r\n\r\n        this.state = { email: '', password: '', emailIsTouched: false, passwordIsTouched: false, submitIsTouched: false, emailIsTaken: false, internalServerError: false };\r\n        \r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n    }\r\n\r\n    handleEmailChange(e: any) {\r\n        const email = e.target.value;\r\n        this.setState({email, emailIsTouched: true, emailIsTaken: false});\r\n    }\r\n\r\n    isValidEmail(): boolean {\r\n        const email = this.state.email;\r\n\r\n        const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n        return regex.test(email);\r\n    }\r\n\r\n    passwordHasCorrectLength(): boolean {\r\n        const password = this.state.password;\r\n\r\n        return password.length >= 8 && password.length <= 32;\r\n    }\r\n\r\n    // Checks if the password contains numbers, letters, and special characters\r\n    passwordIsValid(): boolean {\r\n        const password = this.state.password;\r\n\r\n        const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[^\\da-zA-Z]).{8,32}$/\r\n\r\n        return regex.test(password);\r\n    }\r\n\r\n    handlePasswordChange(e: any) {\r\n        const password = e.target.value;\r\n        this.setState({password, passwordIsTouched: true});\r\n    }\r\n\r\n    emailHasError(): boolean {\r\n        const { submitIsTouched } = this.state;\r\n\r\n        return !this.isValidEmail() && submitIsTouched;\r\n    }\r\n\r\n    getEmailHelperText(): string {\r\n        if ( this.emailHasError() ) {\r\n            return 'Please enter a valid email';\r\n        }\r\n        else if ( this.state.emailIsTaken ) {\r\n            return 'This email is taken, try another.';\r\n        }\r\n        \r\n        return 'Enter your email';\r\n    }\r\n\r\n    passwordHasError(): boolean {\r\n        const { submitIsTouched } = this.state;\r\n\r\n        return !this.passwordIsValid() && submitIsTouched;\r\n    }\r\n\r\n    getPasswordHelperText(): string {\r\n        if ( !this.passwordHasError() ) {\r\n            return 'Enter a password';\r\n        }\r\n        else if ( this.passwordHasCorrectLength() ) {\r\n            return 'Enter between 8 and 32 characters';\r\n        }\r\n    \r\n        return 'Include a letter, number, and special character';\r\n    }\r\n\r\n    hasInternalServerError(): boolean {\r\n        return this.state.internalServerError;\r\n    }\r\n\r\n    async handleSubmit(callback: any) {\r\n        const { email, password } = this.state;\r\n\r\n        this.setState({submitIsTouched: true, internalServerError: false});\r\n\r\n        if ( !this.isValidEmail() || !this.passwordIsValid() ) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await auth.register(email,password);\r\n            \r\n            callback();\r\n   \r\n            this.props.history.push('/features/schedule');\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 409 ) {\r\n                this.setState({emailIsTaken: true});\r\n            }\r\n            else if ( error.response.status === 500 ) {\r\n                this.setState({internalServerError: true});\r\n            }\r\n            else {\r\n                console.error('Unhandled error'); // TODO: Handle this\r\n            }\r\n        }\r\n    }\r\n\r\n    render(): JSX.Element {\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Create a New Account</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <TextField onChange={this.handleEmailChange} name=\"email\" className=\"auth-txt-field\" label=\"Email\" variant=\"filled\" error={this.emailHasError() || this.state.emailIsTaken} helperText={this.getEmailHelperText()}/>\r\n                        <PasswordInput inputProps={{ maxLength: 32 }} onChange={this.handlePasswordChange} className=\"auth-txt-field\" label=\"Password\" error={this.passwordHasError()} helperText={this.getPasswordHelperText()} />\r\n                        <AuthContextConsumer>\r\n                        {context => (\r\n                            <Button onClick={e => this.handleSubmit(context.login)} className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Register</Button>\r\n                        )}\r\n                        </AuthContextConsumer>\r\n                        <FormHelperText className={`auth-err ${this.hasInternalServerError() ? \"\" : \"display-none\"}`} error={true}>Uh-oh! A problem occured. Please refresh the page and try again.</FormHelperText>\r\n                        <div className=\"non-important-btns-container\">\r\n                            <Link className=\"no-underline\" to=\"/login\">\r\n                                <Button className=\"already-registered-btn non-important-btn\" color=\"primary\">Already Have an Account?</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","C:\\Users\\FamilyPC\\client\\src\\components\\PrivateRoute.tsx",["125","126"],"import React, { Component } from 'react';\r\nimport { Route, Redirect  } from 'react-router-dom';\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\nimport Login from './Login';\r\n\r\ntype PrivateRouteState = {}\r\ntype PrivateRouteProps = { options?: any, component?: any, children?: any, path?: any }\r\n\r\nclass PrivateRoute extends React.Component<PrivateRouteProps, PrivateRouteState> {\r\n    constructor(props: PrivateRouteProps) {\r\n      super(props);\r\n    }\r\n\r\n    render() {\r\n      const { options, component, children } = this.props;\r\n\r\n      return (\r\n        <AuthContextConsumer>\r\n          {\r\n\r\n          (context) => { return context.isLoggedIn ? (\r\n            <Route path={this.props.path} {...options} component={ context.isLoggedIn ? component : Login}>{children}</Route> )\r\n            : (<Redirect to=\"/login\"/>)\r\n          }\r\n          \r\n          }\r\n        </AuthContextConsumer>\r\n      );\r\n    }\r\n}\r\n\r\nexport default PrivateRoute;","C:\\Users\\FamilyPC\\client\\src\\components\\Login.tsx",["127","128"],"import React, { Component, useContext } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport PasswordInput from './PasswordInput';\r\n\r\nimport * as auth from '../api/auth';\r\n\r\nimport { AuthContextConsumer } from '../contexts/authContext';\r\n\r\n\r\nimport './Login.css';\r\n\r\nenum LoginFailureType {\r\n    BAD_EMAIL_PASSWORD,\r\n    INTERNAL_SERVER_ERROR,\r\n    ACCOUNT_LOCKED,\r\n    NONE\r\n}\r\n\r\ntype LoginState = {\r\n    email: string,\r\n    password: string,\r\n    submitIsTouched: boolean,\r\n    loginFailureType: LoginFailureType\r\n}\r\n\r\ntype LoginProps = {\r\n    history: any // TODO: Fix this type\r\n}\r\n\r\nclass Login extends React.Component<LoginProps, LoginState> {\r\n    constructor(props: LoginProps) {\r\n        super(props);\r\n\r\n        this.state = { email: '', password: '', submitIsTouched: false, loginFailureType: LoginFailureType.NONE };\r\n        \r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this); \r\n    }\r\n\r\n    handleEmailChange(e: any) {\r\n        const email = e.target.value;\r\n        this.setState({email});\r\n    }\r\n\r\n    emailHasError(): boolean {\r\n        const { email, submitIsTouched } = this.state;\r\n        return email.length === 0 && submitIsTouched;\r\n    }\r\n    handlePasswordChange(e: any) {\r\n        const password = e.target.value;\r\n        this.setState({password});\r\n    }\r\n\r\n    passwordHasError(): boolean {\r\n        const { password, submitIsTouched } = this.state;\r\n        return password.length === 0 && submitIsTouched;\r\n    }\r\n\r\n    hasFormError(): boolean {\r\n        return this.state.loginFailureType !== LoginFailureType.NONE;\r\n    }\r\n\r\n    getFormErrorText() {\r\n        if (this.state.loginFailureType === LoginFailureType.BAD_EMAIL_PASSWORD) {\r\n            return 'The password you’ve entered is incorrect.';\r\n        }\r\n        else if ( this.state.loginFailureType === LoginFailureType.INTERNAL_SERVER_ERROR ) {\r\n            return 'Uh-oh! A problem occured. Please refresh the page and try again.';\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    async handleSubmit(callback: any) {\r\n        const { email, password } = this.state;\r\n\r\n        this.setState({submitIsTouched: true, loginFailureType: LoginFailureType.NONE});\r\n\r\n        if ( email.length === 0 || password.length === 0 ) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await auth.login(email,password);\r\n            \r\n            callback();\r\n            \r\n            this.props.history.push('/features/schedule');\r\n        }\r\n        catch ( error ) {\r\n            if ( error.response.status === 401 ) {\r\n                if ( error.response.data.message === 'Email or password is incorrect' ) { // Keep text same as client\r\n                    this.setState({loginFailureType: LoginFailureType.BAD_EMAIL_PASSWORD});\r\n                }\r\n                else if ( error.response.data.message === 'Account locked' ) { // Keep text same as server\r\n                    this.setState({loginFailureType: LoginFailureType.ACCOUNT_LOCKED});\r\n                }\r\n                else {\r\n                    console.error(\"Unknown 401 status code response\", error);\r\n                }\r\n            }\r\n            else if ( error.response.status === 500 ) {\r\n                this.setState({loginFailureType: LoginFailureType.INTERNAL_SERVER_ERROR});\r\n            }\r\n            else {\r\n                console.error('Unhandled error'); // TODO: Handle this\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if ( this.state.loginFailureType === LoginFailureType.ACCOUNT_LOCKED ) {\r\n            return (<Redirect to=\"/findaccount\"/>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Login to Your Account</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <TextField onChange={this.handleEmailChange} className=\"auth-txt-field\" label=\"Email\" variant=\"filled\" error={this.emailHasError()} helperText=\"Enter your email\"/>\r\n                        <PasswordInput onChange={this.handlePasswordChange} inputProps={{ maxLength: 32 }} className=\"auth-txt-field\" error={this.passwordHasError()} helperText=\"Enter your password\" label=\"Password\"/>\r\n                        <AuthContextConsumer>\r\n                        {context => (\r\n                            <Button onClick={ e => this.handleSubmit(context.login)} className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Login</Button>\r\n                        )}\r\n                        </AuthContextConsumer>\r\n                        <FormHelperText className={`auth-err ${this.hasFormError() ? \"\" : \"display-none\"}`} error={true}>{this.getFormErrorText()}</FormHelperText>\r\n                        <div className=\"non-important-btns-container\">\r\n                            <Link className=\"no-underline\" to=\"/register\">\r\n                                <Button className=\"non-important-btn\" color=\"primary\">Create Account</Button>\r\n                            </Link>\r\n                            <Link className=\"no-underline\" to=\"/findaccount\">\r\n                                <Button className=\"non-important-btn\" color=\"primary\">Forgot Password?</Button>\r\n                            </Link>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","C:\\Users\\FamilyPC\\client\\src\\components\\PasswordInput.tsx",["129"],"import { InputAdornment } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\r\nimport React, {Component } from 'react';\r\n\r\nimport './PasswordInput.css';\r\n\r\ntype PasswordInputState = {\r\n    passwordIsMasked: boolean\r\n}\r\n\r\n//https://itnext.io/building-a-toggled-mask-password-input-component-w-react-and-material-ui-f55e6bd73434\r\n\r\n\r\ntype PasswordInputProps = {\r\n    classes?: any,\r\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    value?: string,\r\n    error?: boolean,\r\n    helperText?: string,\r\n    label?: string,\r\n    className?: string,\r\n    inputProps?: object,\r\n}\r\n\r\nclass PasswordInput extends Component<PasswordInputProps, PasswordInputState> {\r\n    constructor(props: PasswordInputProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            passwordIsMasked: true\r\n        };\r\n    }\r\n\r\n    togglePasswordMask = () => {\r\n        this.setState(prevState => ({\r\n            passwordIsMasked: !prevState.passwordIsMasked\r\n        }));\r\n    }\r\n\r\n    getVisibilityIcon() {\r\n        if ( this.state.passwordIsMasked ) {\r\n            return (\r\n                <VisibilityIcon color=\"primary\" onClick={this.togglePasswordMask} className=\"clickable-icon\"/>\r\n            );\r\n        }\r\n        \r\n        return (\r\n            <VisibilityOffIcon color=\"primary\" onClick={this.togglePasswordMask} className=\"clickable-icon\"/>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { passwordIsMasked } = this.state;\r\n\r\n        return (\r\n            <TextField\r\n                variant=\"filled\"\r\n                type={passwordIsMasked ? 'password' : 'text'}\r\n                {...this.props}\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            {this.getVisibilityIcon()}\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default PasswordInput;","C:\\Users\\FamilyPC\\client\\src\\components\\Header.tsx",["130","131"],"import React, { Component } from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport AccessAlarmIcon from '@material-ui/icons/AccessAlarm';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport SettingsPhoneIcon from '@material-ui/icons/SettingsPhone';\r\nimport LocalHospitalIcon from '@material-ui/icons/LocalHospital';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './Header.css';\r\n\r\ntype HeaderState = {\r\n\r\n}\r\n\r\ntype HeaderProps = {\r\n\r\n}\r\n\r\nclass Header extends React.Component<{}, HeaderState> {\r\n    constructor(props: HeaderProps) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-bar-container\">\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h6\" className=\"title\"></Typography>\r\n                        <nav>\r\n                            <NavLink className=\"icon-container\" to=\"/features/medicine\" activeClassName=\"icon-container-active\">\r\n                                <LocalHospitalIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Medicines</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/contactsettings\" activeClassName=\"icon-container-active\">\r\n                                <SettingsPhoneIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Calls</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/alarms\" activeClassName=\"icon-container-active\">\r\n                                <AccessAlarmIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Alarms</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/schedule\" activeClassName=\"icon-container-active\">\r\n                                <EventIcon className=\"icon\" />\r\n                                <div className=\"icon-description\">Schedule</div>\r\n                            </NavLink>\r\n                            <NavLink className=\"icon-container\" to=\"/features/accountsettings\" activeClassName=\"icon-container-active\">\r\n                                <AccountCircle className=\"icon\" />\r\n                                <div className=\"icon-description\">Account</div>\r\n                            </NavLink>\r\n                        </nav>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\FamilyPC\\client\\src\\api\\user.tsx",["132","133"],"\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\n\r\n\r\n\r\nexport const findAccount = (email: string) => {\r\n    return axios.get(`/api/users/findaccount/${email}`);\r\n}",["134","135"],"C:\\Users\\FamilyPC\\client\\src\\components\\FindAccount.tsx",["136","137"],"import React, { Component, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport * as userAPI from '../api/user';\r\n\r\nimport './FindAccount.css';\r\n\r\ntype FindAccountState = {\r\n    searchEmailFailureType: SearchEmailFailureType\r\n}\r\n\r\ntype FindAccountProps = {\r\n    history: any\r\n}\r\n\r\nenum SearchEmailFailureType {\r\n    ACCOUNT_NOT_FOUND,\r\n    INTERNAL_SERVER_ERROR,\r\n    NONE\r\n}\r\n\r\nclass FindAccount extends React.Component<FindAccountProps, FindAccountState> {\r\n\r\n    private emailRef: any; // TODO: Type\r\n\r\n    constructor(props: FindAccountProps) {\r\n        super(props);\r\n\r\n        this.state = { searchEmailFailureType: SearchEmailFailureType.NONE };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.emailRef = React.createRef();\r\n    }\r\n\r\n    async handleSubmit(e: any) {\r\n        const emailToSearch: string = this.emailRef.current.value;\r\n\r\n        try {\r\n            await userAPI.findAccount(emailToSearch);\r\n            this.setState({searchEmailFailureType: SearchEmailFailureType.NONE});\r\n            this.props.history.push(`/resetpassword?email=${emailToSearch}`)\r\n        }\r\n        catch(error) {\r\n            if ( error.response.status === 404 ) {\r\n                this.setState({searchEmailFailureType: SearchEmailFailureType.ACCOUNT_NOT_FOUND});\r\n            }\r\n            else if ( error.response.status === 500 ) {\r\n                this.setState({searchEmailFailureType: SearchEmailFailureType.INTERNAL_SERVER_ERROR});\r\n            }\r\n        }\r\n    }\r\n\r\n    displayError(): boolean {\r\n        return this.state.searchEmailFailureType !== SearchEmailFailureType.NONE;\r\n    }\r\n\r\n    getErrorText(): string {\r\n        if ( this.state.searchEmailFailureType === SearchEmailFailureType.ACCOUNT_NOT_FOUND ) {\r\n            return 'We couldnt find that email.';\r\n        }\r\n        else if ( this.state.searchEmailFailureType === SearchEmailFailureType.INTERNAL_SERVER_ERROR ) {\r\n            return 'Internal error. Refresh the page.';\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    // TODO: auth-err really should be renamed\r\n    render() {\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Find Account</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <FormHelperText className=\"forgot-pw-desc\">Enter your email to search for your account.</FormHelperText>\r\n                        <TextField inputRef={this.emailRef} className=\"auth-txt-field\" label=\"Email\" variant=\"filled\"/>\r\n                        <Button onClick={ this.handleSubmit } className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Search</Button>\r\n                        <FormHelperText className={`auth-err ${this.displayError() ? \"\" : \"display-none\"}`} error={true}>{this.getErrorText()}</FormHelperText>\r\n                    </form>\r\n                    <div className=\"non-important-btns-container\">\r\n                        <Link className=\"no-underline\" to=\"/login\">\r\n                            <Button className=\"find-email-btn non-important-btn\" color=\"primary\">Cancel</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FindAccount;","C:\\Users\\FamilyPC\\client\\src\\components\\ResetPassword.tsx",["138","139","140","141","142","143","144"],"import React, { Component, useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Radio, { RadioProps } from '@material-ui/core/Radio';\r\n\r\nimport qs from 'qs'\r\n\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\n\r\nimport * as userAPI from '../api/user';\r\n\r\nimport './ResetPassword.css';\r\n\r\ntype ResetPasswordState = {\r\n    email: string,\r\n    selectedContactMethod: string\r\n}\r\n\r\ntype ResetPasswordProps = {\r\n    location: any // TODO: params\r\n}\r\n\r\n// TODO: Rename to find account\r\n// Make second ResetPassword\r\nclass ResetPassword extends React.Component<ResetPasswordProps, ResetPasswordState> {\r\n\r\n    constructor(props: ResetPasswordProps) {\r\n        super(props);\r\n\r\n        let email: any = '';\r\n\r\n        if ( qs.parse(this.props.location.search, { ignoreQueryPrefix: true }) ) {\r\n            email = qs.parse(this.props.location.search, { ignoreQueryPrefix: true }).email;\r\n        }\r\n\r\n        this.state = { email, selectedContactMethod: \"email\" };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        this.setState({selectedContactMethod: e.target.value});\r\n    }\r\n      \r\n    async handleSubmit(e: any) {\r\n        try {\r\n\r\n        }\r\n        catch(error) {\r\n        }\r\n    }\r\n\r\n    // TODO: IMPORTANT, BUTTON IS 300px IS CONTROLLING WIDTH OF ENTIRE FORM\r\n\r\n    // TODO: Think of a better header title\r\n    // TODO: auth-err really should be renamed\r\n    render() {\r\n        return (\r\n            <div className=\"auth-page-container\">\r\n                <div className=\"auth-page\">\r\n                    <Typography className=\"auth-header\" color=\"primary\" variant=\"h4\">Reset Password</Typography>\r\n                    <form className=\"auth-form\">\r\n                        <Paper elevation={1} className=\"find-account-icon-container\">\r\n                            <AccountCircle color=\"primary\" className=\"find-account-icon\" />\r\n                            <div>{this.state.email}</div>\r\n                        </Paper>\r\n                        <div className=\"reset-instructions\">Select how you would like to recieve the code.</div>\r\n                        <Divider className=\"contact-divider\" />\r\n                        <div className=\"contact\">\r\n                            <div>\r\n                                <div className=\"contact-method\">Send Code Via Email</div>\r\n                                <div className=\"contact-detail\">{this.state.email}</div>\r\n                            </div>\r\n                            <div className=\"radio-container\">\r\n                                <Radio color=\"primary\" checked={this.state.selectedContactMethod === 'email'} onChange={this.handleChange} value=\"email\"/>\r\n                            </div>\r\n                        </div>\r\n                        <Divider className=\"contact-divider\" />\r\n                        <div className=\"contact\">\r\n                            <div>\r\n                                <div className=\"contact-method\">Send Code Via SMS</div>\r\n                                <div className=\"contact-detail\">410-017-6440</div>\r\n                            </div>\r\n                            <div className=\"radio-container\">\r\n                                <Radio color=\"primary\" checked={this.state.selectedContactMethod === 'sms'} onChange={this.handleChange} value=\"sms\"/>\r\n                            </div>\r\n                        </div>\r\n                        <Divider className=\"contact-divider\" />\r\n                        <Button onClick={ this.handleSubmit } className=\"auth-btn\" variant=\"contained\" color=\"primary\" size=\"medium\">Send Code</Button>\r\n                    </form>\r\n                    <div className=\"non-important-btns-container\">\r\n                        <Link className=\"no-underline\" to=\"/findaccount\">\r\n                            <Button className=\"find-email-btn non-important-btn\" color=\"primary\">Not You?</Button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetPassword;",{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":30},{"ruleId":"149","severity":1,"message":"153","line":1,"column":32,"nodeType":"151","messageId":"152","endLine":1,"endColumn":40},{"ruleId":"149","severity":1,"message":"154","line":1,"column":42,"nodeType":"151","messageId":"152","endLine":1,"endColumn":52},{"ruleId":"149","severity":1,"message":"155","line":16,"column":10,"nodeType":"151","messageId":"152","endLine":16,"endColumn":29},{"ruleId":"149","severity":1,"message":"156","line":3,"column":17,"nodeType":"151","messageId":"152","endLine":3,"endColumn":27},{"ruleId":"149","severity":1,"message":"157","line":3,"column":29,"nodeType":"151","messageId":"152","endLine":3,"endColumn":42},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":12,"column":5,"nodeType":"161","messageId":"162","endLine":14,"endColumn":6},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":12,"column":5,"nodeType":"161","messageId":"162","endLine":14,"endColumn":6},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":12,"column":5,"nodeType":"161","messageId":"162","endLine":14,"endColumn":6},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":12,"column":5,"nodeType":"161","messageId":"162","endLine":14,"endColumn":6},{"ruleId":"149","severity":1,"message":"163","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":30},{"ruleId":"149","severity":1,"message":"164","line":1,"column":32,"nodeType":"151","messageId":"152","endLine":1,"endColumn":42},{"ruleId":"159","severity":1,"message":"160","line":13,"column":3,"nodeType":"161","messageId":"162","endLine":15,"endColumn":2},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":19,"column":5,"nodeType":"161","messageId":"162","endLine":21,"endColumn":6},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":12,"column":5,"nodeType":"161","messageId":"162","endLine":14,"endColumn":6},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"154","line":1,"column":28,"nodeType":"151","messageId":"152","endLine":1,"endColumn":38},{"ruleId":"149","severity":1,"message":"165","line":55,"column":17,"nodeType":"151","messageId":"152","endLine":55,"endColumn":24},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":24,"column":5,"nodeType":"161","messageId":"162","endLine":26,"endColumn":6},{"ruleId":"149","severity":1,"message":"156","line":2,"column":17,"nodeType":"151","messageId":"152","endLine":2,"endColumn":27},{"ruleId":"149","severity":1,"message":"157","line":2,"column":29,"nodeType":"151","messageId":"152","endLine":2,"endColumn":42},{"ruleId":"145","replacedBy":"166"},{"ruleId":"147","replacedBy":"167"},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"154","line":1,"column":28,"nodeType":"151","messageId":"152","endLine":1,"endColumn":38},{"ruleId":"149","severity":1,"message":"158","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"149","severity":1,"message":"154","line":1,"column":28,"nodeType":"151","messageId":"152","endLine":1,"endColumn":38},{"ruleId":"149","severity":1,"message":"168","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"169","line":8,"column":8,"nodeType":"151","messageId":"152","endLine":8,"endColumn":17},{"ruleId":"149","severity":1,"message":"170","line":9,"column":8,"nodeType":"151","messageId":"152","endLine":9,"endColumn":22},{"ruleId":"149","severity":1,"message":"171","line":11,"column":17,"nodeType":"151","messageId":"152","endLine":11,"endColumn":27},{"ruleId":"149","severity":1,"message":"172","line":17,"column":13,"nodeType":"151","messageId":"152","endLine":17,"endColumn":20},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"@typescript-eslint/no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useContext' is defined but never used.","'AuthContextConsumer' is defined but never used.","'AxiosError' is defined but never used.","'AxiosResponse' is defined but never used.","'Component' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'ReactChildren' is defined but never used.","'ReactChild' is defined but never used.","'classes' is assigned a value but never used.",["173"],["174"],"'useLocation' is defined but never used.","'TextField' is defined but never used.","'FormHelperText' is defined but never used.","'RadioProps' is defined but never used.","'userAPI' is defined but never used.","no-global-assign","no-unsafe-negation"]